@model IEnumerable<MediCare.Models.Appointment>
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Appointments";
    Layout = "~/Areas/Doctor/Views/Shared/_Layout.cshtml";
}

<div class="max-w-7xl mx-auto space-y-8">

    <!-- 🌿 Header -->
    <div class="flex items-center justify-between">
        <div>
            <h1 class="page-title">📅 My Appointments</h1>
            <p class="page-subtitle">Manage and update your upcoming appointments.</p>
        </div>
    </div>

    <!-- ✅ Alerts -->
    @if (TempData["Message"] != null)
    {
        <div class="bg-green-50 border border-green-200 text-green-800 px-4 py-3 rounded-lg shadow-sm">
            @TempData["Message"]
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="bg-red-50 border border-red-200 text-red-800 px-4 py-3 rounded-lg shadow-sm">
            @TempData["Error"]
        </div>
    }

    <!-- 🩺 Appointments List -->
    @if (!Model.Any())
    {
        <div class="card text-center py-10">
            <h3 class="text-lg font-semibold text-gray-700">No Appointments Yet</h3>
            <p class="text-gray-500 text-sm mt-1">You currently have no scheduled appointments.</p>
        </div>
    }
    else
    {
        <div class="card overflow-hidden">
            <div class="card-header">
                <h2 class="card-title">Appointments Overview</h2>
            </div>

            <table class="min-w-full border-collapse text-sm">
                <thead class="bg-brand-50 text-brand-800 uppercase text-xs">
                    <tr>
                        <th class="px-5 py-3 text-left font-semibold">Patient</th>
                        <th class="px-5 py-3 text-left font-semibold">Date &amp; Time</th>
                        <th class="px-5 py-3 text-left font-semibold">Status</th>
                        <th class="px-5 py-3 text-center font-semibold">Actions</th>
                    </tr>
                </thead>

                <tbody class="divide-y divide-gray-100">
                    @foreach (var appt in Model.OrderBy(a => a.DateTime))
                    {
                        var status = appt.Status?.Trim() ?? "";

                        <tr class="hover:bg-gray-50 transition">

                            <!-- Patient -->
                            <td class="px-5 py-4 font-medium text-gray-800">
                                @appt.Patient?.AppUser?.FullName
                            </td>

                            <!-- Date -->
                            <td class="px-5 py-4 text-gray-600 text-center">
                                <div class="flex flex-col items-center">
                                    <span>@appt.DateTime.ToString("ddd, dd MMM yyyy • hh:mm tt")</span>
                                    @if (appt.RescheduledAt != null)
                                    {
                                        <!-- 🔄 Shows only if appointment was rescheduled -->
                                        <span class="bg-yellow-100 text-yellow-700 text-xs font-semibold px-2 py-0.5 rounded-full mt-1">
                                            🔄 Rescheduled
                                        </span>
                                    }
                                </div>
                            </td>

                            <!-- Status -->
                            <td class="px-5 py-4">
                                @if (status.Equals("Pending", StringComparison.OrdinalIgnoreCase))
                                {
                                    <span class="px-3 py-1 bg-yellow-100 text-yellow-700 text-xs font-semibold rounded-full">Pending</span>
                                }
                                else if (status.Equals("Confirmed", StringComparison.OrdinalIgnoreCase))
                                {
                                    <span class="px-3 py-1 bg-emerald-100 text-emerald-700 text-xs font-semibold rounded-full">Confirmed</span>
                                }
                                else if (status.Equals("Paid", StringComparison.OrdinalIgnoreCase))
                                {
                                    <span class="px-3 py-1 bg-green-100 text-green-700 text-xs font-semibold rounded-full">Paid</span>
                                }
                                else if (status.Equals("Completed", StringComparison.OrdinalIgnoreCase))
                                {
                                    <span class="px-3 py-1 bg-blue-100 text-blue-700 text-xs font-semibold rounded-full">Completed</span>
                                }
                                else if (status.Equals("Cancelled", StringComparison.OrdinalIgnoreCase))
                                {
                                    <span class="px-3 py-1 bg-red-100 text-red-700 text-xs font-semibold rounded-full">Cancelled</span>
                                }
                            </td>

                            <!-- Actions -->
                            <td class="px-5 py-4 text-center">
                                @if (status.Equals("Pending", StringComparison.OrdinalIgnoreCase))
                                {
                                    <div class="flex justify-center gap-2">
                                        <form method="post" action="/Doctor/Appointments/Confirm/@appt.AppointmentId" class="inline">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn-brand">✅ Confirm</button>
                                        </form>

                                        <form method="post" action="/Doctor/Appointments/Cancel/@appt.AppointmentId" class="inline">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn-danger">❌ Cancel</button>
                                        </form>

                                        <form method="get" action="/Doctor/Appointments/Reschedule/@appt.AppointmentId" class="inline">
                                            <button type="submit"
                                                    class="px-4 py-2 rounded-lg bg-gradient-to-r from-amber-500 to-yellow-400 text-white font-semibold shadow hover:shadow-lg hover:scale-[1.03] transition-all duration-200 flex items-center gap-1">
                                                🔄 <span>Reschedule</span>
                                            </button>
                                        </form>
                                    </div>
                                }
                                else if (status.Equals("Confirmed", StringComparison.OrdinalIgnoreCase))
                                {
                                    <div class="flex justify-center gap-2">
                                        <form method="get" action="/Doctor/Appointments/Reschedule/@appt.AppointmentId" class="inline">
                                            <button type="submit"
                                                    class="px-4 py-2 rounded-lg bg-gradient-to-r from-amber-500 to-yellow-400 text-white font-semibold shadow hover:shadow-lg hover:scale-[1.03] transition-all duration-200 flex items-center gap-1">
                                                🔄 <span>Reschedule</span>
                                            </button>
                                        </form>

                                        <form method="post" action="/Doctor/Appointments/Cancel/@appt.AppointmentId" class="inline">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn-danger">❌ Cancel</button>
                                        </form>
                                    </div>
                                }
                                else if (status.Equals("Paid", StringComparison.OrdinalIgnoreCase))
                                {
                                    <div class="flex justify-center gap-2">
                                        <a href="@Url.Action("EditNotes", "Appointments", new { area = "Doctor", id = appt.AppointmentId })"
                                           class="btn-brand">
                                            ✏️ Edit Notes
                                        </a>

                                        <form method="post" action="/Doctor/Appointments/Complete/@appt.AppointmentId">
                                            @Html.AntiForgeryToken()
                                            <button class="btn-brand">✔ Mark Completed</button>
                                        </form>

                                        <a href="@Url.Action("Details", "Appointments", new { area = "Doctor", id = appt.AppointmentId })"
                                           class="px-4 py-2 rounded-lg bg-gray-200 text-gray-800 font-semibold shadow">
                                            👁 View Details
                                        </a>
                                    </div>
                                }
                                else if (status.Equals("Rescheduled", StringComparison.OrdinalIgnoreCase))
                                {
                                    <div class="flex flex-col items-center">
                                        <span class="bg-yellow-100 text-yellow-700 text-xs font-semibold px-2 py-0.5 rounded-full mt-1">
                                            🔄 Rescheduled
                                        </span>
                                        <span class="text-gray-500 text-xs mt-1">Awaiting patient confirmation</span>
                                    </div>
                                }
                                else if (status.Equals("Completed", StringComparison.OrdinalIgnoreCase))
                                {
                                    <div class="flex justify-center gap-2">
                                        <span class="text-blue-700 font-semibold text-xs flex items-center gap-1">
                                            ✔ Done
                                        </span>

                                        <a href="@Url.Action("Details", "Appointments", new { area = "Doctor", id = appt.AppointmentId })"
                                           class="px-4 py-2 rounded-lg bg-gray-200 text-gray-800 font-semibold shadow">
                                            👁 View Details
                                        </a>
                                    </div>
                                }
                                else if (status.Equals("Cancelled", StringComparison.OrdinalIgnoreCase))
                                {
                                    <span class="text-red-600 font-semibold text-xs">❌ Cancelled</span>
                                    <a href="@Url.Action("Details", "Appointments", new { area = "Doctor", id = appt.AppointmentId })"
                                       class="px-4 py-2 rounded-lg bg-gray-200 text-gray-800 font-semibold shadow">
                                        👁 View Details
                                    </a>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>
