@{
    ViewData["Title"] = "Leave Feedback";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="max-w-lg mx-auto bg-white shadow-lg rounded-2xl p-8 mt-10">
    <h2 class="text-2xl font-bold text-blue-700 mb-4">🩺 Leave Feedback</h2>

    <form asp-action="Create" method="post" class="space-y-5">
        @Html.AntiForgeryToken()

        <input type="hidden" name="appointmentId" value="@ViewBag.AppointmentId" />
        <input type="hidden" name="doctorId" value="@ViewBag.DoctorId" />
        <input type="hidden" name="patientId" value="@ViewBag.PatientId" />

        <!-- ⭐ Animated Star Rating -->
        <div>
            <label class="block font-semibold mb-2 text-gray-700">Rating</label>

            <!-- Stars -->
            <div id="star-rating" class="flex justify-center gap-2 text-4xl cursor-pointer select-none text-gray-300">
                @for (int i = 1; i <= 5; i++)
                {
                    <span class="star transition transform duration-200 hover:scale-125" data-value="@i">⭐</span>
                }
            </div>

            <!-- Hidden input for form -->
            <input type="hidden" id="rating" name="rating" required />

            <!-- Rating text -->
            <div class="text-center mt-2">
                <p id="rating-text" class="text-gray-700 text-sm font-semibold"></p>
            </div>
        </div>

        <!-- 💬 Comments -->
        <div>
            <label class="block font-semibold mb-1 text-gray-700">Comments</label>
            <textarea name="comments" rows="4" class="w-full border rounded p-2 focus:ring-2 focus:ring-blue-500" placeholder="Write your feedback..." required></textarea>
        </div>

        <!-- Submit -->
        <button type="submit"
                class="w-full py-2 bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-lg transition transform hover:scale-[1.02]">
            Submit Feedback
        </button>
    </form>
</div>

<!-- ⭐ Rating Script -->
<script>
    const stars = document.querySelectorAll('.star');
    const ratingInput = document.getElementById('rating');
    const ratingText = document.getElementById('rating-text');

    const labels = ["Poor", "Fair", "Good", "Very Good", "Excellent"];

    stars.forEach(star => {
        star.addEventListener('mouseover', () => {
            const hoverValue = star.getAttribute('data-value');
            highlightStars(hoverValue);
        });

        star.addEventListener('mouseleave', () => {
            highlightStars(ratingInput.value || 0);
        });

        star.addEventListener('click', () => {
            const rating = star.getAttribute('data-value');
            ratingInput.value = rating;

            highlightStars(rating);

            // show label and number
            ratingText.textContent = `${labels[rating - 1]} (${rating}/5)`;

            // small click animation
            star.classList.add('scale-125');
            setTimeout(() => star.classList.remove('scale-125'), 200);
        });
    });

    function highlightStars(value) {
        stars.forEach(s => {
            s.classList.toggle('text-yellow-400', s.getAttribute('data-value') <= value);
            s.classList.toggle('text-gray-300', s.getAttribute('data-value') > value);
        });
    }
</script>
